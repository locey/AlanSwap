{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x70E9A91923e2fa821F7dcaD2ab9De3C85ca4d601",
      "txHash": "0xe8909f5071591438dadab11957a8f0f81415ae1ec497a3a0d8e44485745b464e",
      "kind": "uups"
    },
    {
      "address": "0x60951873A311A63D247fDBC8E63c5333a8B6f1D1",
      "txHash": "0x9738ec2816d78d3b9fe3c6a4e4c2e38e16cfc852b597ce111e0504d4bb88f61e",
      "kind": "uups"
    }
  ],
  "impls": {
    "95273a6037d865fcb8c0a8d7c5d2743885c56be84eb1652362129ed7bcc18bbd": {
      "address": "0xa58E4D346570ACE25764336Ca819aEcEf697E9B1",
      "txHash": "0xf9ebab23503a3c54e07de2c605de47a43c82844344e23130d96282a1b03c9fed",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "rewardToken",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(CSWAPToken)3494",
            "contract": "AirdropRewardPool",
            "src": "contracts\\AirdropRewardPool.sol:21"
          },
          {
            "label": "authorizedAirdrops",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "AirdropRewardPool",
            "src": "contracts\\AirdropRewardPool.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(CSWAPToken)3494": {
            "label": "contract CSWAPToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "931442d8c7ce0fef4ba0e541a8800537b83d87e429182d7fac40104955b2357f": {
      "address": "0x22bC2155aEE4F7211bF9B508e20Ae688e76e937B",
      "txHash": "0x6d168a82e530efd867db0b71c691dbe1927d2b79b63c4491fcc1512e19993703",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:111"
          },
          {
            "label": "rewardPool",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(AirdropRewardPool)3190",
            "contract": "MerkleAirdrop",
            "src": "contracts\\MerkleAirdrop.sol:24"
          },
          {
            "label": "airdrops",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_struct(Airdrop)3533_storage)",
            "contract": "MerkleAirdrop",
            "src": "contracts\\MerkleAirdrop.sol:60"
          },
          {
            "label": "claimed",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "contract": "MerkleAirdrop",
            "src": "contracts\\MerkleAirdrop.sol:65"
          },
          {
            "label": "airdropCount",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "MerkleAirdrop",
            "src": "contracts\\MerkleAirdrop.sol:71"
          },
          {
            "label": "userRewards",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserRewardInfo)3544_storage))",
            "contract": "MerkleAirdrop",
            "src": "contracts\\MerkleAirdrop.sol:75"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(AirdropRewardPool)3190": {
            "label": "contract AirdropRewardPool",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserRewardInfo)3544_storage)": {
            "label": "mapping(address => struct MerkleAirdrop.UserRewardInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserRewardInfo)3544_storage))": {
            "label": "mapping(uint256 => mapping(address => struct MerkleAirdrop.UserRewardInfo))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Airdrop)3533_storage)": {
            "label": "mapping(uint256 => struct MerkleAirdrop.Airdrop)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Airdrop)3533_storage": {
            "label": "struct MerkleAirdrop.Airdrop",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "merkleRoot",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "claimedReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "treeVersion",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(UserRewardInfo)3544_storage": {
            "label": "struct MerkleAirdrop.UserRewardInfo",
            "members": [
              {
                "label": "totalReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "claimedReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "pendingReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "hasRecord",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastVersion",
                "type": "t_uint32",
                "offset": 1,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
